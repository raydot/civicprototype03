# Docker Compose for local development
services:
  # PostgreSQL database for local development
  postgres:
    image: postgres:15-alpine
    container_name: voterprime-postgres
    environment:
      POSTGRES_USER: voterprime
      POSTGRES_PASSWORD: voterprime_dev
      POSTGRES_DB: voterprime_dev
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U voterprime']
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI application
  api:
    build: .
    container_name: voterprime-api
    ports:
      - '8000:8000'
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://voterprime:voterprime_dev@postgres:5432/voterprime_dev
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=DEBUG
      - DOO_DOCZ=true
    volumes:
      - .:/app # Mount source code for hot reloading
      - /app/__pycache__ # Exclude pycache from volume mount
    command:
      [
        '/opt/conda/envs/ai-recommendation-service/bin/python',
        '-m',
        'uvicorn',
        'app.main:app',
        '--host',
        '0.0.0.0',
        '--port',
        '8000',
        '--reload'
      ]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  # Redis for session management (optional for development)
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
